"""–ë–æ—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ –≥–æ—Ä–æ–¥—É"""

from telebot import TeleBot
import requests
import os
from translate import Translator
from dotenv import load_dotenv

load_dotenv()# –ó–∞–≥—Ä—É–∑–∫–∞ env-–æ–≤

translator = Translator(to_lang="en")

BOT_API_KEY = os.getenv('BOT_API_KEY')
WHETHER_URL = os.getenv('WHETHER_URL') # –≠—Ç–æ —á—Ç–æ–±—ã –Ω–∞ git –Ω–µ –≤—ã–≥—Ä—É–∂–∞—Ç—å
WHETHER_API_KEY = os.getenv('WHETHER_API_KEY')

bot = TeleBot(token=BOT_API_KEY)


def get_city(city_name: str) -> str: # –Ω–∞—á–∞–ª —Å—Ç–∞–≤–∏—Ç—å —Ç–∏–ø–∏–∑–∞—Ü–∏—é –ø—Ä–æ—Å—Ç–æ –ø–æ —Ç–∏—Ö–æ–π –Ω–∞ –≥–æ –Ω–∞—á–∏–Ω–∞—é –∫–æ–¥–∏—Ç—å –∏ –ø—Ä–∏–≤—ã–∫–∞—é)
    """–ü—Ä–∏–Ω–µ–º–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
     –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –¥–µ–ª–∞–µ—Ç GET –∑–∞–ø—Ä–æ—Å –Ω–∞ WHETHER_URL"""

    params = {
        'q': city_name,
        'appid': WHETHER_API_KEY,
        'units': 'metric'
    }

    response = requests.get(WHETHER_URL, params=params) # –°–∞–º GET –∑–∞–ø—Ä–æ—Å —Å parms(—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≥—Ä—É–±–æ –≥–æ–≤–æ—Ä—è)

    if response.status_code == 200: # –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç 200, —Ç–æ –≤—ã—Ç—è–≥–∏–≤–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—Ç—å—Ç–∞—Ç—ã
        data = response.json()
        main = data['main']
        wind = data['wind']
        temp = main['temp']
        humidity = main['humidity']
        wind_speed = wind['speed']
        return True, (f"–ì–æ—Ä–æ–¥ {city_name}\n"
                f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed}–º/—Å\n"
                f"–í–ª–∞–∂–Ω–æ—Å—Ç—å:{humidity}%\n")

    elif response.status_code == 400 or response.status_code == 404: # bad request –∏–ª–∏ Not found
        return False, "–î–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"

    return False, "–î–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ" # –ï—Å–ª–∏ —Å–µ—Ä–≤–∞–∫ –æ—Ç–∫–∏–Ω—É–ª 500


@bot.message_handler(commands=['start'])
def start(message):
    """–ù—É –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    return bot.send_message(message.chat.id, "üëã–ü—Ä–∏–≤–µ—Ç.\n"
                                             "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É –≤ —Ç–æ–≤–æ–µ –≥–æ—Ä–æ–¥–µ.\n"
                                             "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ.\n"
                                             "–ü–æ —Ç–∏–ø—É: –ú–æ—Å–∫–≤–∞. "
                                             "–ë–æ—Ç –Ω–∞–ø—Å–∏–∞–Ω –°–∫–∞–∫—É–Ω –î–º–∏—Ç—Ä–∏–µ–º –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è")


@bot.message_handler(func=lambda message: True)
def message(message):
    """–ü—Ä–∏–Ω–µ–º–∞–µ—Ç message(–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞).
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    status, answer = get_city(message.text)
    return bot.send_message(message.chat.id, answer)

if __name__ == '__main__':
    bot.polling()